---
spring:
  application:
    name: demo
  datasource:
    url: jdbc:postgresql://${DB_URL:localhost:5432}/${DB_NAME:demo}?currentSchema=${DB_SCHEMA:public}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: ${DB_SCHEMA:public}
  flyway: #flyway automatically uses the datasource from the application to connect to the DB
    enabled: true # enables flyway database migration
    locations: classpath:db/migration/structure, classpath:db/migration/data # the location where flyway should look for migration scripts
    validate-on-migrate: true
    default-schema: ${DB_SCHEMA:public}
  profiles:
    active: ${SPRING_ACTIVE_PROFILE:default}
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    security:
      protocol: PLAINTEXT
  cloud:
    discovery:
      client:
        composite-indicator:
          enabled: false
    function:
      definition: >
        citySyncConsumer
    stream:
      defaultBinder: kafka
      kafka:
        default:
          producer:
            sync: true
        binder:
          enable-observation: true
          requiredAcks: all
          producerProperties:
            retries: 3
            key:
              serializer: org.apache.kafka.common.serialization.StringSerializer
          consumerProperties:
            key:
              deserializer: org.apache.kafka.common.serialization.StringDeserializer
        bindings:
          citySyncConsumer-in-0:
            consumer:
              enable-dlq: false
      bindings:
        # input
        citySyncConsumer-in-0:
          group: demo-group
          destination: demo-city-sync
          binder: kafka
          consumer:
            retry-template-name: DEFAULT
        # output
        productSyncProducer:
          destination: demo-product-sync
          binder: kafka

logging:
  level:
    root: ${SPRING_LOG_LEVEL:INFO}

validation:
  schema:
    kafka-product-sync: kafka/product/sync.json

springdoc:
  api-docs:
    path: /doc/openapi
  swagger-ui:
    path: /doc/swagger-ui.html

management:
  server:
    port: 8081
  endpoints:
    web:
      base-path: /
      path-mapping:
        metrics: spring-metrics
        prometheus: metrics
        info: version
      exposure:
        include: health,prometheus,info,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  tracing:
    sampling:
      probability: 1.0

tracing:
  url: ${OTLP_TRACING_HTTP_URL}

neko:
  baseUrl: https://nekos.best
